import s from"fs";import o from"cli-color";export default class u{constructor(e){Object.assign(this,e)}appInfo=e=>{const r=JSON.parse(s.readFileSync("package.json","utf-8"));console.log(`
${r.title} v${r.version} running on Node.js ${process.version}
`),process.argv.pop()=="blockit"&&(console.log(`  builder url:    ${o.magenta("http://localhost:3001")}`),console.log(`  preview url:    ${o.magenta("http://localhost:3000")}
`),console.log(`${this.logTime(new Date)} - Waiting for ${o.cyan("changes...")}`)),e()};logTime=e=>`[${new Intl.DateTimeFormat("en",{hour:"2-digit",minute:"2-digit",second:"2-digit",hourCycle:"h24"}).format(e)}]`;errHandler=(e,r)=>{switch(e.name){case r.buildHtml.name:const t=String(e.error).split(" ").slice(5,-5).join(" "),c=String(e.error).split(" ").slice(5)[2];console.log(`${this.logTime(new Date)} - ${t=="The partial"?`HTML compile ${o.red("an error occurred:")} The partial ${o.yellow(`"${c}"`)} could not be found`:`HTML compile ${o.red("an error occurred:")} ${e.error}`}`);break;case r.buildCss.name:const i=String(e.error.formatted).split(" ").slice(1,-4).join(" ");console.log(`${this.logTime(new Date)} - CSS compile ${o.red("an error occurred:")} ${i}`);break;case r.buildJs.name:console.log(`${this.logTime(new Date)} - JS compile ${o.red("an error occurred:")} ${e.error}`);break;case r.buildStatic.name:console.log(`${this.logTime(new Date)} - Static assets deliver ${o.red("an error occurred:")} ${e.error}`);break;case r.buildImg.name:console.log(`${this.logTime(new Date)} - Image optimization ${o.red("an error occurred:")} ${e.error}`);break;case r.name:console.log(`${this.logTime(new Date)} - ${o.red("An error occurred:")} ${e.error}`);break}};hookSearch=e=>{s.existsSync("../../src/hooks/blog/search-post.hbs")&&s.existsSync("../../src/hooks/blog/search-result.hbs")?(hookSearchWrite("../../src/hooks/blog/search-post.hbs","../../src/hooks/blog/search-result.hbs"),e()):(hookSearchWrite("hooks/blog/search-post.hbs","hooks/blog/search-result.hbs"),e())};hookSearchWrite=(e,r)=>{const t=s.readFileSync(e,"utf8"),c=s.readFileSync(r,"utf8");s.readFile("../../src/assets/js/utilities/blog.js","utf8",(i,l)=>{const a=/(?<=notFoundDiv.innerHTML\s=\s\`)([^`]*)(?=\`)/,n=/(?<=return\s\`)([^`]*)(?=\`)/g,h=l.replace(a,c).replace(n,t);s.writeFileSync("../../src/assets/js/utilities/blog.js",h)})};hookSectionsPreview=()=>this.src("../../src/hooks/sections/previews/*").pipe(this.dest("./views/assets/img/sections"))}
