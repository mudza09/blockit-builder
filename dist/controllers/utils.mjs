import s from"fs";import r from"cli-color";import*as o from"./compiler.mjs";import c from"./server.mjs";export default class m{appInfo=e=>{const i=JSON.parse(s.readFileSync("package.json","utf-8"));console.log(`
${i.title} v${i.version} running on ${r.green(`Node.js ${process.version}`)}
`),process.argv.pop()=="blockit"&&(console.log(`  builder url:    ${r.magenta("http://localhost:3001")}`),console.log(`  preview url:    ${r.magenta("http://localhost:3000")}
`),console.log(`${this.logTime(new Date)} - Waiting for ${r.cyan("changes...")}`)),e()};logTime=e=>`[${new Intl.DateTimeFormat("en",{hour:"2-digit",minute:"2-digit",second:"2-digit",hourCycle:"h24"}).format(e)}]`;errHandler=e=>{switch(e.name){case o.buildHtml.name:const i=String(e.error).split(" ").slice(5,-5).join(" "),t=String(e.error).split(" ").slice(5)[2];console.log(`${this.logTime(new Date)} - ${i=="The partial"?`HTML compile an ${r.red("error occurred:")} The partial "${t}" could not be found`:`${e.error}`}`);break;case o.buildCss.name:const l=String(e.error.formatted).split(" ").slice(1,-4).join(" ");console.log(`${this.logTime(new Date)} - CSS compile an ${r.red("error occurred:")} ${l}`);break;case o.buildJs.name:const n=String(e.error).split(" ").slice(1,-7).join(" ");console.log(`${this.logTime(new Date)} - JS compile an ${r.red("error occurred:")} ${n}`);break;case o.buildStatic.name:const a=String(e.error).split(" ").slice(1,-7).join(" ");console.log(`${this.logTime(new Date)} - Static assets deliver an ${r.red("error occurred:")} ${a}`);break;case o.buildImg.name:console.log(`${this.logTime(new Date)} - ${e.error}`);break;case c.name:console.log(`${this.logTime(new Date)} - ${e.error}`);break}}}
